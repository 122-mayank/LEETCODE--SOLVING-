class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {

        int m = mat.size();
        int n = mat[0].size();

        // If reshape not possible, return original matrix
        if (m * n != r * c) {
            return mat;
        }

        // Flatten matrix into 1D
        vector<int> temp(m * n);
        int k = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                temp[k++] = mat[i][j];
            }
        }

        // Build reshaped matrix
        vector<vector<int>> ans;
        k = 0;
        for (int i = 0; i < r; i++) {
            vector<int> row;
            for (int j = 0; j < c; j++) {
                row.push_back(temp[k++]);
            }
            ans.push_back(row);
        }

        return ans;
    }
};
