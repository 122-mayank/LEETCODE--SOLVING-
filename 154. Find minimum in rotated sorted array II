class Solution {
private:
   int getPivot(vector<int>& nums){
         
       int s = 0, e = nums.size() - 1;

    while (s < e) {
        int mid = s + (e - s) / 2;

        // Adjust for duplicates
        if (nums[mid] == nums[e]) {
            e--; // Safely skip duplicates
        } else if (nums[mid] >= nums[0]) {
            s = mid + 1;
        } else {
            e = mid;
        }
    }
    return s;
}   
public:
    int findMin(vector<int>& nums) {
         int pivot = getPivot(nums);  
        
         if( nums[pivot] <= nums[0]){
            return nums[pivot];
         }
         return nums[0];  
        

    }
};
